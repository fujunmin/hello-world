#! /usr/bin/python#! coding=UTF-8import jsonimport osimport sysimport unittestBASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))))sys.path.append(BASE_DIR)from business.riskbell.test.unittest_flv4.case.interfacev4 import LoginAPI_v4class TestRemoveSub(unittest.TestCase):    @classmethod    def setUpClass(cls):        cls.LoginAPI_v4 = LoginAPI_v4()    def test_remove_sub1(self):        print 'test_remove_sub1'        token = json.loads(self.LoginAPI_v4.login().content)['token']        per_page = 200        res_subsList = self.LoginAPI_v4.subs_list(per_page=per_page,token=token)        self.assertEqual(res_subsList.status_code, 200)        self.assertIsNotNone(res_subsList.content)        sub_id = json.loads(res_subsList.content)[0]['sub_id']        res_remove = self.LoginAPI_v4.remove_subs(sub_id,token)        self.assertEqual(res_remove.status_code,200)        self.assertItemsEqual(json.loads(res_remove.content).keys(),['status'])        self.assertItemsEqual(json.loads(res_remove.content).values(),['REMOVED'])    def test_remove_sub2(self):        print 'run test_remove_sub2'        token = json.loads(self.LoginAPI_v4.login().content)['token']        sub_id = '012345678'        res_remove = self.LoginAPI_v4.remove_subs(sub_id, token)        self.assertEqual(res_remove.status_code, 400)        self.assertItemsEqual(json.loads(res_remove.content).keys(), ['code','message'])        self.assertEqual(json.loads(res_remove.content)['code'], 701)        self.assertEqual(json.loads(res_remove.content)['message'], u'错误的请求数据')if __name__=='__main__':    unittest.main(verbosity=2)